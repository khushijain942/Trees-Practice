/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findHeight(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        int lh=findHeight(root->left);
        int rh=findHeight(root->right);
        return max(lh,rh)+1;
    }
    int res=INT_MIN;
    int diameterOfBinaryTree(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        int leftHeight=findHeight(root->left);
        int rightHeight=findHeight(root->right);
        res=max(res,rightHeight+leftHeight);
        diameterOfBinaryTree(root->left);
        diameterOfBinaryTree(root->right);
        return res;
    }
};
