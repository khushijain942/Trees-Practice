/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    public:
    int maxPathSum(TreeNode* root)
    {
        int maximum=INT_MIN;
        maxPathHelp(root,maximum);
        return maximum;
    }
    
public:
    int maxPathHelp(TreeNode* root,int &maximum) {
        if(root==NULL)
            return 0;
        int leftSum=max(0,maxPathHelp(root->left,maximum)); //to handle negative path sum
        int rightSum=max(0,maxPathHelp(root->right,maximum));
        maximum=max(maximum,leftSum+rightSum+root->val);
        return root->val+max(leftSum,rightSum);
    }
};
